<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>我的学习记录</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://yuxinla.github.io/"/>
  <updated>2021-09-03T06:54:33.376Z</updated>
  <id>https://yuxinla.github.io/</id>
  
  <author>
    <name>ling</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>【Linux】linux系统中安装ifconfig命令</title>
    <link href="https://yuxinla.github.io/article/202109031428.html"/>
    <id>https://yuxinla.github.io/article/202109031428.html</id>
    <published>2021-09-03T06:28:17.000Z</published>
    <updated>2021-09-03T06:54:33.376Z</updated>
    
    <content type="html"><![CDATA[<p>linux系统中安装ifconfig命令</p><a id="more"></a><p>1.使用ifconfig命令报错</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# ifconfig</span><br><span class="line">-bash: ifconfig: command not found</span><br></pre></td></tr></table></figure><p>2.查找安装包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# yum list | grep net-tool*</span><br><span class="line">net-tools.x86_64                            2.0-0.25.20131004git.el7   @base</span><br></pre></td></tr></table></figure><p>3.安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# yum install -y net-tools.x86_64</span><br></pre></td></tr></table></figure><p>4.测试</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# ifconfig</span><br><span class="line">ens33: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 192.168.118.129  netmask 255.255.255.0  broadcast 192.168.118.255</span><br><span class="line">        inet6 fe80::c5a6:c726:2234:7b79  prefixlen 64  scopeid 0x20&lt;link&gt;</span><br><span class="line">        ether 00:0c:29:38:17:dc  txqueuelen 1000  (Ethernet)</span><br><span class="line">        RX packets 25532  bytes 36935012 (35.2 MiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 7599  bytes 473519 (462.4 KiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">lo: flags=73&lt;UP,LOOPBACK,RUNNING&gt;  mtu 65536</span><br><span class="line">        inet 127.0.0.1  netmask 255.0.0.0</span><br><span class="line">        inet6 ::1  prefixlen 128  scopeid 0x10&lt;host&gt;</span><br><span class="line">        loop  txqueuelen 1000  (Local Loopback)</span><br><span class="line">        RX packets 0  bytes 0 (0.0 B)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 0  bytes 0 (0.0 B)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      linux系统中安装ifconfig命令
    
    </summary>
    
    
      <category term="Linux" scheme="https://yuxinla.github.io/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://yuxinla.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>测试分析</title>
    <link href="https://yuxinla.github.io/article/202108281419.html"/>
    <id>https://yuxinla.github.io/article/202108281419.html</id>
    <published>2021-08-28T06:19:10.000Z</published>
    <updated>2021-08-28T06:19:11.053Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>【Python+Django】Django1.10.3在python3.8报错</title>
    <link href="https://yuxinla.github.io/article/202108231656.html"/>
    <id>https://yuxinla.github.io/article/202108231656.html</id>
    <published>2021-08-23T08:56:14.000Z</published>
    <updated>2021-08-24T07:19:37.801Z</updated>
    
    <content type="html"><![CDATA[<p>Django 1.10.3版本，Python 3.8.2版本，django项目创建成功，进入项目文件夹中，使用python manage.py报runtimeerror错误：RuntimeError: class not set defining ‘AbstractBaseUser’ as &lt;class ‘django.contrib.auth.base_user.AbstractBaseUser’&gt;. Was classcell propagated to type.new?</p><a id="more"></a><p><strong>解决方案：</strong></p><p>在文件Python38/Lib/site-packages/django/db/models/base.py加上如下代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">new_attrs = &#123;<span class="string">'__module__'</span>: module&#125;</span><br><span class="line">classcell = attrs.pop(<span class="string">'__classcell__'</span>, <span class="literal">None</span>)</span><br><span class="line"><span class="keyword">if</span> classcell <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">new_attrs[<span class="string">'__classcell__'</span>] = classcell</span><br><span class="line">new_class = super_new(cls, name, bases, new_attrs)</span><br></pre></td></tr></table></figure><p>位置如下：</p><img src="/img/image-20210823170942774.png" alt="image-20210823170942774" style="zoom:80%;" />]]></content>
    
    <summary type="html">
    
      Django1.10.3在python3.8报错：RuntimeError: __class__ not set defining &#39;AbstractBaseUser&#39; as...
    
    </summary>
    
    
      <category term="Django" scheme="https://yuxinla.github.io/categories/Django/"/>
    
    
      <category term="Django" scheme="https://yuxinla.github.io/tags/Django/"/>
    
  </entry>
  
  <entry>
    <title>【Python】解析带注释的json文件型</title>
    <link href="https://yuxinla.github.io/article/202006022102.html"/>
    <id>https://yuxinla.github.io/article/202006022102.html</id>
    <published>2020-06-02T13:02:41.000Z</published>
    <updated>2021-08-24T07:43:27.526Z</updated>
    
    <content type="html"><![CDATA[<p>解析带注释的json文件</p><a id="more"></a><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">json_to_dict</span><span class="params">(path)</span>:</span></span><br><span class="line">    <span class="string">""" Parse a JSON file</span></span><br><span class="line"><span class="string">        First remove comments and then use the json module package</span></span><br><span class="line"><span class="string">        Comments look like :</span></span><br><span class="line"><span class="string">            // ...</span></span><br><span class="line"><span class="string">        or</span></span><br><span class="line"><span class="string">            /*</span></span><br><span class="line"><span class="string">            ...</span></span><br><span class="line"><span class="string">            */</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    comment_re = re.compile(<span class="string">r'(^)?[^\S\n]*/(?:\*(.*?)\*/[^\S\n]*|/[^\n]*)($)?'</span>, </span><br><span class="line">                            re.DOTALL | re.MULTILINE)</span><br><span class="line">    url_re = re.compile(</span><br><span class="line">        <span class="string">r'http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&amp;+]|[!*(),]|(?:%[0-9a-fA-F][0-9a-fA-F]))+'</span>)</span><br><span class="line">    content = <span class="string">''</span></span><br><span class="line">    <span class="keyword">with</span> open(path, encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> f.readlines():</span><br><span class="line">            <span class="comment"># Looking for http</span></span><br><span class="line">            url_match = url_re.search(line)</span><br><span class="line">            <span class="comment"># Looking for comments</span></span><br><span class="line">            match = comment_re.search(line)</span><br><span class="line">            <span class="keyword">while</span> match <span class="keyword">and</span> <span class="keyword">not</span> url_match:</span><br><span class="line">                <span class="comment"># single line comment</span></span><br><span class="line">                line = line[:match.start()] + line[match.end():]</span><br><span class="line">                match = comment_re.match(line)</span><br><span class="line">            content += <span class="string">''</span>.join(line)</span><br><span class="line">    <span class="comment"># Return dict</span></span><br><span class="line">    <span class="keyword">return</span> json.loads(content)</span><br></pre></td></tr></table></figure><p>该方法可以去除带有注释的json文件，若注释中存在网址或与有网址同行的注释，则无法去除，建议使用json5</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install json5</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json5</span><br><span class="line">jsonStr = <span class="string">'''&#123;</span></span><br><span class="line"><span class="string">    "status": 200,//成功返回值200</span></span><br><span class="line"><span class="string">    "message": "已成功获取http://www.baidu.com"//http://www.baidu.com</span></span><br><span class="line"><span class="string">&#125;'''</span></span><br><span class="line">print(json5.loads(jsonStr))</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      解析带注释的json文件
    
    </summary>
    
    
      <category term="Python" scheme="https://yuxinla.github.io/categories/Python/"/>
    
      <category term="json" scheme="https://yuxinla.github.io/categories/Python/json/"/>
    
    
      <category term="Python" scheme="https://yuxinla.github.io/tags/Python/"/>
    
      <category term="json" scheme="https://yuxinla.github.io/tags/json/"/>
    
  </entry>
  
  <entry>
    <title>【app自动化-Appium】Appium环境搭建</title>
    <link href="https://yuxinla.github.io/article/202005311359.html"/>
    <id>https://yuxinla.github.io/article/202005311359.html</id>
    <published>2020-05-31T05:59:01.000Z</published>
    <updated>2021-08-24T07:44:36.999Z</updated>
    
    <content type="html"><![CDATA[<p>Appoium环境搭建</p><a id="more"></a><h3 id="JDK安装"><a href="#JDK安装" class="headerlink" title="JDK安装"></a>JDK安装</h3><ul><li><p>官网下载：<a href="https://www.oracle.com/java/technologies/javase-downloads.html" target="_blank" rel="noopener">https://www.oracle.com/java/technologies/javase-downloads.html</a> （<a href="https://blog.csdn.net/qq_40298231/article/details/98485608?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.nonecase&depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.nonecase" target="_blank" rel="noopener">跳过登录方法</a>）</p></li><li><p>环境变量配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">JAVA_HOME=C:\Program Files\Java\jdk1.8.0_251</span><br><span class="line">PATH=%JAVA_HOME%\bin</span><br><span class="line">PATH=%JAVA_HOME%\jre\bin</span><br></pre></td></tr></table></figure></li><li><p>检查安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\Jia&gt;java -version</span><br><span class="line">java version <span class="string">"1.8.0_251"</span></span><br><span class="line">Java(TM) SE Runtime Environment (build 1.8.0_251-b08)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM (build 25.251-b08, mixed mode)</span><br></pre></td></tr></table></figure></li></ul><h3 id="SDK安装"><a href="#SDK安装" class="headerlink" title="SDK安装"></a>SDK安装</h3><ul><li><p>下载<strong>Android SDK</strong>安装包</p><ul><li>官网下载：<a href="https://android-sdk.en.softonic.com/download" target="_blank" rel="noopener">https://android-sdk.en.softonic.com/download</a></li><li>网盘下载：<a href="http://tools.android-studio.org/index.php/sdk" target="_blank" rel="noopener">http://tools.android-studio.org/index.php/sdk</a></li></ul></li><li><p><strong>Android SDK Manager</strong></p><ul><li>打开SDK安装目录下的<strong>SDK Manager.exe</strong></li><li><strong>Android SDK Tools</strong>（必须，只需下载一个版本，一般选最新版本）：基础工具包</li><li><strong>Android SDK Platfrom-tools</strong>（必须，只需下载一个版本，一般选最新版本）：存放公用开发工具</li><li><strong>Android SDK Build-tools</strong>（必须，可以安装多个版本）：Android项目构建工具</li><li><strong>Android xxx （API xx）</strong>目录（可选的个平台开发工具，向下兼容，一般最新版本，勾选<strong>SDK Platform</strong>）</li><li><strong>SDK Platform</strong>（必须）：对应平台的开发工具</li><li><strong>Extras目录</strong>（可选的扩展）：主要下载<strong>Google USB Driver</strong>和<strong>Google Web Driver</strong></li></ul></li><li><p>环境变量配置（tools的环境变量确认下是否有bin）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ANDROID_HOME=C:\android-sdk-windows</span><br><span class="line">PATH=%ANDROID_HOME%\platform-tools</span><br><span class="line">PATH=%ANDROID_HOME%\tools\bin</span><br><span class="line">PATH=%ANDROID_HOME%\build-tools\29.0.3</span><br></pre></td></tr></table></figure></li><li><p>检查安装</p><ul><li><p><strong>adb</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\Jia&gt;adb</span><br><span class="line">Android Debug Bridge version 1.0.41</span><br><span class="line">Version 29.0.6-6198805</span><br><span class="line">Installed as C:\AppTest\Android\android-sdk\platform-tools\adb.exe</span><br></pre></td></tr></table></figure></li><li><p><strong>aapt</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\Jia&gt;aapt</span><br><span class="line">Android Asset Packaging Tool</span><br></pre></td></tr></table></figure></li><li><p><strong>monkeyrunner</strong></p><p>执行报错：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\Jia&gt;monkeyrunner</span><br><span class="line">SWT folder <span class="string">'..\framework\x86_64'</span> does not exist.</span><br><span class="line">Please <span class="built_in">set</span> ANDROID_SWT to point to the folder containing swt.jar <span class="keyword">for</span> your platform.</span><br></pre></td></tr></table></figure><p>解决方案：</p><p>打开monkeyrunner.bat，修改：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> frameworkdir=lib</span><br><span class="line"><span class="comment"># 改为</span></span><br><span class="line"><span class="built_in">set</span> frameworkdir=..\lib</span><br><span class="line"></span><br><span class="line">-Dcom.android.monkeyrunner.bindir=..\framework -jar %jarpath% %*</span><br><span class="line"><span class="comment"># 改为</span></span><br><span class="line">-Dcom.android.monkeyrunner.bindir=..\..\platform-tools -jar %jarpath% %*</span><br></pre></td></tr></table></figure></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      Appoium环境搭建
    
    </summary>
    
    
      <category term="app自动化" scheme="https://yuxinla.github.io/categories/app%E8%87%AA%E5%8A%A8%E5%8C%96/"/>
    
      <category term="Appium" scheme="https://yuxinla.github.io/categories/app%E8%87%AA%E5%8A%A8%E5%8C%96/Appium/"/>
    
    
      <category term="app自动化" scheme="https://yuxinla.github.io/tags/app%E8%87%AA%E5%8A%A8%E5%8C%96/"/>
    
      <category term="Appium" scheme="https://yuxinla.github.io/tags/Appium/"/>
    
  </entry>
  
  <entry>
    <title>【Android自动化-UiAutomator2.0】UiAutomator2.0使用过程中遇到的各种问题记录</title>
    <link href="https://yuxinla.github.io/article/202005292233.html"/>
    <id>https://yuxinla.github.io/article/202005292233.html</id>
    <published>2020-05-29T14:33:48.000Z</published>
    <updated>2021-10-17T06:23:56.261Z</updated>
    
    <content type="html"><![CDATA[<p>UiAutomator2.0使用过程中遇到的各种问题记录</p><a id="more"></a><h3 id="新安装的Android-Studio，第一次编译项目的时候，一直在下载-fastutil-7-2-0-jar"><a href="#新安装的Android-Studio，第一次编译项目的时候，一直在下载-fastutil-7-2-0-jar" class="headerlink" title="新安装的Android Studio，第一次编译项目的时候，一直在下载 fastutil-7.2.0.jar"></a>新安装的Android Studio，第一次编译项目的时候，一直在下载 fastutil-7.2.0.jar</h3><p>解决方案：修改一下buil.gradle</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Top-level build file where you can add configuration options common to all sub-projects/modules.</span></span><br><span class="line"></span><br><span class="line">buildscript &#123;</span><br><span class="line"></span><br><span class="line">    repositories &#123;</span><br><span class="line">        maven &#123; url = <span class="string">"http://maven.aliyun.com/nexus/content/groups/public/"</span> &#125;</span><br><span class="line">        google()</span><br><span class="line">        jcenter()</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    dependencies &#123;</span><br><span class="line">        classpath <span class="string">'com.android.tools.build:gradle:3.6.3'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// <span class="doctag">NOTE:</span> Do not place your application dependencies here; they belong</span></span><br><span class="line">        <span class="comment">// in the individual module build.gradle files</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">allprojects &#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        maven &#123; url = <span class="string">"http://maven.aliyun.com/nexus/content/groups/public/"</span> &#125;</span><br><span class="line">        google()</span><br><span class="line">        jcenter()</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">task clean(type: Delete) &#123;</span><br><span class="line">    <span class="keyword">delete</span> rootProject.buildDir</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Error-running-‘app’-No-target-device-found-安卓调试问题"><a href="#Error-running-‘app’-No-target-device-found-安卓调试问题" class="headerlink" title="Error running ‘app’: No target device found.安卓调试问题"></a>Error running ‘app’: No target device found.安卓调试问题</h3><p>报错信息：</p><img src="/img/image-20200529234158714.png" alt="image-20200529234158714"  /><p>原因分析：未检测到设备，包括真机和虚拟机</p><p>解决方案：</p><p>在Terminal执行adb devices命令，查看有没有连接到的设备</p><ul><li><p>如果是没有查到设备，确认虚拟机是否安装，是否打开；确认真机是否连接打开USB调试并安装驱动，可执行<strong>adb kill-server</strong>和<strong>adb start-server</strong>这两个命令重启</p></li><li><p>如果有设备，选择run —&gt;EditConfiguration—&gt;General，查看Deployment Target Options选项，查看设置的Taget是否有问题，以及是否选中了Use same device for future launches选项</p></li></ul>]]></content>
    
    <summary type="html">
    
      UiAutomator2.0使用过程中遇到的各种问题记录
    
    </summary>
    
    
      <category term="UiAutomator" scheme="https://yuxinla.github.io/categories/UiAutomator/"/>
    
    
      <category term="UiAutomator" scheme="https://yuxinla.github.io/tags/UiAutomator/"/>
    
  </entry>
  
  <entry>
    <title>【Android自动化-UiAutomator2.0】UiAutomator2.0环境配置</title>
    <link href="https://yuxinla.github.io/article/202005282244.html"/>
    <id>https://yuxinla.github.io/article/202005282244.html</id>
    <published>2020-05-28T14:44:21.000Z</published>
    <updated>2021-10-17T06:23:36.068Z</updated>
    
    <content type="html"><![CDATA[<p>Android自动化-UiAutomator2.0环境配置</p><a id="more"></a><h3 id="JDK安装"><a href="#JDK安装" class="headerlink" title="JDK安装"></a>JDK安装</h3><p>1.下载地址：<a href="https://www.oracle.com/java/technologies/javase-downloads.html" target="_blank" rel="noopener">https://www.oracle.com/java/technologies/javase-downloads.html</a></p><p>2.这里下载的是：jdk-8u251-windows-x64.exe，跳过登录下载，试试：<a href="http://download.oracle.com/otn/java/jdk/8u251-b08/3d5a2bb8f8d4428bbe94aed7ec7ae784/jdk-8u251-windows-x64.exe" target="_blank" rel="noopener">http://download.oracle.com/otn/java/jdk/8u251-b08/3d5a2bb8f8d4428bbe94aed7ec7ae784/jdk-8u251-windows-x64.exe</a></p><p>3.直接双击安装</p><p>4.环境配置（我的安装路径为C:\Program Files\Java\jdk1.8.0_251）</p><p>新增系统变量：<strong>JAVA_HOME=C:\Program Files\Java\jdk1.8.0_251</strong></p><p>PATH增加：<strong>%JAVA_HOME%\bin</strong></p><p>PATH增加：<strong>%JAVA_HOME%\jre\bin</strong></p><p>5.验证jdk是否安装成功，打开cmd命令提示符。输入一下命令，可以查看版本，无报错即安装成功</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">java -version</span><br><span class="line">javac -version</span><br></pre></td></tr></table></figure><h3 id="AS-Android-Studio-安装"><a href="#AS-Android-Studio-安装" class="headerlink" title="AS(Android Studio)安装"></a>AS(Android Studio)安装</h3><p>1.下载地址：<a href="https://developer.android.google.cn/studio/index.html" target="_blank" rel="noopener">https://developer.android.google.cn/studio/index.html</a></p><p>2.这里下载的是：android-studio-ide-192.6392135-windows.exe</p><p>3.直接双击安装，安装好后打开</p><p>弹窗选择：</p><p><strong>Import Studio settings from</strong> : Do not import settings -&gt; OK</p><p><strong>Android Studio First Run</strong> : Cancel</p><p><strong>Addroid Studio Setup Wizard</strong> </p><ul><li><strong>Welcome:</strong> Next</li></ul><img src="/img/image-20200529105721652.png" alt="image-20200529105721652" style="zoom:50%;" /><ul><li><strong>Install Type:</strong> Custom -&gt; Next</li></ul><img src="/img/image-20200529105811064.png" alt="image-20200529105811064" style="zoom:50%;" /><ul><li>S<strong>elect default JDK Location:</strong> JAVA_HOME -&gt; Next</li></ul><img src="/img/image-20200529105943871.png" alt="image-20200529105943871" style="zoom:50%;" /><ul><li><strong>Select UI Theme:</strong> 选择主题 -&gt; Next</li></ul><img src="/img/image-20200529110025917.png" alt="image-20200529110025917" style="zoom:50%;" /><ul><li><strong>SDK Components Setup:</strong> 选择SDK安装路径 -&gt; Next</li></ul><img src="/img/image-20200529110841228.png" alt="image-20200529110841228" style="zoom:50%;" /><ul><li><strong>Emulator Settings:</strong> 使用默认配置 -&gt; Next</li></ul><img src="/img/image-20200529111041999.png" alt="image-20200529111041999" style="zoom:50%;" /><ul><li><strong>Verify Settings:</strong> Finish</li></ul><img src="/img/image-20200529111159810.png" alt="image-20200529111159810" style="zoom:50%;" /><ul><li><strong>Downloading Components:</strong> Finish</li></ul><img src="/img/image-20200529152256532.png" alt="image-20200529152256532" style="zoom:50%;" /><p>4.配置SDK，Configure -&gt; SDK Manager</p><img src="/img/image-20200529165333345.png" alt="image-20200529165333345" style="zoom:50%;" /><p>5.配置Android环境</p><ul><li>选择需要的版本，点击Apply</li></ul><img src="/img/image-20200529165813220.png" alt="image-20200529165813220" style="zoom:50%;" /><ul><li>点击OK</li></ul><img src="/img/image-20200529170217641.png" alt="image-20200529170217641" style="zoom:50%;" /><ul><li>点击Accept -&gt; Next</li></ul><img src="/img/image-20200529170156537.png" alt="image-20200529170156537" style="zoom:50%;" /><ul><li>等待下载完成，点击Finish</li></ul><img src="/img/image-20200529172803518.png" alt="image-20200529172803518" style="zoom:50%;" /><h3 id="SDK环境配置"><a href="#SDK环境配置" class="headerlink" title="SDK环境配置"></a>SDK环境配置</h3><p>1.系统环境变量配置</p><p>新增系统变量：<strong>ANDROID_HOME=C:\android-sdk-windows</strong></p><p>PATH增加：<strong>%ANDROID_HOME%\platform-tools</strong></p><p>PATH增加：<strong>%ANDROID_HOME%\tools</strong></p><h3 id="虚拟机的安装"><a href="#虚拟机的安装" class="headerlink" title="虚拟机的安装"></a>虚拟机的安装</h3><p>1.点击Tools -&gt; AVD Manager</p><img src="/img/image-20200530002129470.png" alt="image-20200530002129470" style="zoom:50%;" /><p>2.点击Create Virtual Device…</p><img src="/img/image-20200530002246921.png" alt="image-20200530002246921" style="zoom:50%;" /><p>3.选择API</p><img src="/img/image-20200530002414351.png" alt="image-20200530002414351" style="zoom:50%;" /><p>4.根据Android版本选择想要的，点击<strong>Download</strong></p><img src="/img/image-20200530002547633.png" alt="image-20200530002547633" style="zoom:50%;" /><p>5.等待安装完成</p><img src="/img/image-20200530001936668.png" alt="image-20200530001936668" style="zoom:50%;" /><p>6.选择安装的image -&gt; Next -&gt; Finish</p><img src="/img/image-20200530004851667.png" alt="image-20200530004851667" style="zoom:50%;" /><p>7.虚拟机安装完成</p><img src="/img/image-20200530005006056.png" alt="image-20200530005006056" style="zoom:50%;" />]]></content>
    
    <summary type="html">
    
      Android自动化-UiAutomator2.0环境配置
    
    </summary>
    
    
      <category term="UiAutomator" scheme="https://yuxinla.github.io/categories/UiAutomator/"/>
    
    
      <category term="UiAutomator" scheme="https://yuxinla.github.io/tags/UiAutomator/"/>
    
  </entry>
  
  <entry>
    <title>【杂记】记录工作、学习过程中易忘的知识点</title>
    <link href="https://yuxinla.github.io/article/202005281707.html"/>
    <id>https://yuxinla.github.io/article/202005281707.html</id>
    <published>2020-05-28T09:07:27.000Z</published>
    <updated>2021-08-24T07:37:24.030Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>在工作中总会遇到一些比较简单但容易忘记的知识点，做个笔记，方便查找</p><a id="more"></a><h3 id="SQL"><a href="#SQL" class="headerlink" title="SQL"></a>SQL</h3><ul><li><h5 id="MySQL日期字符串类型互转"><a href="#MySQL日期字符串类型互转" class="headerlink" title="MySQL日期字符串类型互转"></a>MySQL日期字符串类型互转</h5> <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- data_format 日期转字符串</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">date_format</span>(<span class="keyword">Now</span>(), <span class="string">'%Y-%m-%d %H:%i'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- str_to_date 字符串转日期</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">str_to_date</span>(<span class="string">'2008.08.09 08:09:30'</span>, <span class="string">'%Y.%m.%d %h:%i:%s'</span>); <span class="comment">-- 2008-08-09 08:09:30</span></span><br></pre></td></tr></table></figure></li><li><h5 id="1"><a href="#1" class="headerlink" title="1"></a>1</h5></li><li><h5 id=""><a href="#" class="headerlink" title=""></a></h5></li></ul><h3 id="JAVA"><a href="#JAVA" class="headerlink" title="JAVA"></a>JAVA</h3><ul><li><p><strong>JDK</strong>下载地址：<a href="https://developer.android.google.cn/studio/index.html" target="_blank" rel="noopener">https://developer.android.google.cn/studio/index.html</a></p><p> 跳过登录下载，在网上找到分享的账号：<a href="https://blog.csdn.net/qq_40298231/article/details/98485608?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.nonecase&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.nonecase" target="_blank" rel="noopener">https://blog.csdn.net/qq_40298231/article/details/98485608?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.nonecase&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.nonecase</a></p></li><li><p><strong>openjdk</strong>的下载网址：<a href="http://jdk.java.net/" target="_blank" rel="noopener">http://jdk.java.net/</a></p></li></ul><h3 id="SVN"><a href="#SVN" class="headerlink" title="SVN"></a>SVN</h3><ul><li>SVN打基线方法：<a href="https://blog.51cto.com/angustung/1940255" target="_blank" rel="noopener">https://blog.51cto.com/angustung/1940255</a></li></ul>]]></content>
    
    <summary type="html">
    
      记录工作、学习过程中易忘的知识点，方便查找
    
    </summary>
    
    
      <category term="杂记" scheme="https://yuxinla.github.io/categories/%E6%9D%82%E8%AE%B0/"/>
    
    
      <category term="杂记" scheme="https://yuxinla.github.io/tags/%E6%9D%82%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>【Python】Linux下非root用户安装python3</title>
    <link href="https://yuxinla.github.io/article/202005272137.html"/>
    <id>https://yuxinla.github.io/article/202005272137.html</id>
    <published>2020-05-27T13:37:53.000Z</published>
    <updated>2021-10-17T06:24:22.626Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>工作过程中，遇到自动化框架python2改为python3时，服务器上未安装python3环境，无外网，在非root用户下安装python3环境的情况，记录一下</p><a id="more"></a><h3 id="安装python3"><a href="#安装python3" class="headerlink" title="安装python3"></a>安装python3</h3><ul><li><p>下载python3安装包，网址：<a href="https://www.python.org/downloads/source/" target="_blank" rel="noopener">https://www.python.org/downloads/source/</a> 此处我选择3.8.3版本的</p><p><img src="/img/image-20200527215143661.png" alt="image-20200527215143661"></p></li><li><p>将下载的安装包上传至服务器上并解压</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">tar -xzf Python-3.8.3.tgz</span><br><span class="line">mkdir -p /home/python38 # 这里新建python安装路径，安装在其他地方也可以，这里选择home下</span><br><span class="line">cd Python-3.8.3</span><br><span class="line">./configure --prefix="/home/python38"</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>一般来说，上述完成后pip已经安装好了，可在<strong>/home/python38/bin/</strong>下看到</p></li><li><p>环境变量配置</p><ul><li><p>打开配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi ~/.bash_profile</span><br></pre></td></tr></table></figure></li><li><p>在~/.bash_profile文件中配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> PATH=<span class="string">"<span class="variable">$PATH</span>:/home/python38"</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="string">"<span class="variable">$PATH</span>:/home/python38/bin"</span></span><br></pre></td></tr></table></figure></li><li><p>保存文件后，执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source ~/.bash_profile</span><br></pre></td></tr></table></figure></li><li><p>查看python是否已安装成功</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python --version</span><br></pre></td></tr></table></figure></li></ul></li></ul><h3 id="安装第三方模块"><a href="#安装第三方模块" class="headerlink" title="安装第三方模块"></a>安装第三方模块</h3><ul><li><p>在官网下载第三方模块，官网：<a href="https://pypi.org/" target="_blank" rel="noopener">https://pypi.org/</a></p><p><img src="/img/image-20200527223224630.png" alt="image-20200527223224630"></p></li><li><p>两种文件均可下载</p><p><img src="/img/image-20200527222553964.png" alt="image-20200527222553964"></p><ul><li>安装<strong>*.whl</strong>文件</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install requests-2.23.0-py2.py3-none-any.whl</span><br></pre></td></tr></table></figure><ul><li>安装<strong>*.tar.gz</strong>文件</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install requests-2.23.0.tar.gz</span><br></pre></td></tr></table></figure></li><li><p>安装时出现以下情况</p><p><img src="/img/image-20200520223557252.png" alt="image-20200520223557252"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ERROR: Could not find a version that satisfies the requirement soupsieve&gt;=1.2 (from beautifulsoup4==4.9.1) (from versions: none)</span><br><span class="line">ERROR: No matching distribution found for soupsieve&gt;=1.2 (from beautifulsoup4==4.9.1)</span><br></pre></td></tr></table></figure><p>报错信息意思是：需要先安装soupsieve模块，版本要&gt;=1.2</p></li></ul>]]></content>
    
    <summary type="html">
    
      Linux下非root用户安装python3及第三方模块
    
    </summary>
    
    
      <category term="python" scheme="https://yuxinla.github.io/categories/python/"/>
    
    
      <category term="python" scheme="https://yuxinla.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>【Python+Robotframework】Robotframework接口自动化</title>
    <link href="https://yuxinla.github.io/article/202005192348.html"/>
    <id>https://yuxinla.github.io/article/202005192348.html</id>
    <published>2020-05-19T15:48:02.000Z</published>
    <updated>2021-08-24T07:41:06.608Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>在robot framework中，requestslibrary、httplibrary.http、rest等库，都可以用来做http接口方面的自动化测试</p><a id="more"></a><h4 id="requestslibrary"><a href="#requestslibrary" class="headerlink" title="requestslibrary"></a>requestslibrary</h4><ul><li><p><strong>安装：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip install requests</span><br><span class="line">pip install robotframework-requests</span><br></pre></td></tr></table></figure></li><li><p><strong>使用：</strong></p></li></ul>]]></content>
    
    <summary type="html">
    
      对Robotframework接口自动化常用库及实例介绍
    
    </summary>
    
    
      <category term="Python" scheme="https://yuxinla.github.io/categories/Python/"/>
    
      <category term="Robotframework" scheme="https://yuxinla.github.io/categories/Python/Robotframework/"/>
    
      <category term="接口自动化" scheme="https://yuxinla.github.io/categories/Python/Robotframework/%E6%8E%A5%E5%8F%A3%E8%87%AA%E5%8A%A8%E5%8C%96/"/>
    
    
      <category term="Python" scheme="https://yuxinla.github.io/tags/Python/"/>
    
      <category term="Robotframework" scheme="https://yuxinla.github.io/tags/Robotframework/"/>
    
      <category term="接口自动化" scheme="https://yuxinla.github.io/tags/%E6%8E%A5%E5%8F%A3%E8%87%AA%E5%8A%A8%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>【Python+Robotframework】Robotframework安装使用的报错及解决方案</title>
    <link href="https://yuxinla.github.io/article/202005182318.html"/>
    <id>https://yuxinla.github.io/article/202005182318.html</id>
    <published>2020-05-18T15:18:36.000Z</published>
    <updated>2021-08-24T07:45:01.931Z</updated>
    
    <content type="html"><![CDATA[<p>Robotframework安装使用的报错及解决方案</p><a id="more"></a><h4 id="安装intelliBot插件报错"><a href="#安装intelliBot插件报错" class="headerlink" title="安装intelliBot插件报错"></a>安装intelliBot插件报错</h4><p>报错信息：</p><img src="/img/image-20200518234022166.png" alt="image-20200518234022166" style="zoom:80%;" /><p>解决方案：</p><ul><li><p>打开下载<strong>IDEA</strong>插件的网址 <a href="https://plugins.jetbrains.com" target="_blank" rel="noopener">https://plugins.jetbrains.com</a> 搜索插件名字</p></li><li><p>搜索intelliBot并下载</p><img src="/img/image-20200527211856015.png" alt="image-20200527211856015" style="zoom:70%;" /></li><li><p>打开pycharm，<strong>File-&gt;Settings-&gt;Plugins</strong>，点击<strong>Install Plugin from Disk…</strong>选择下载的jar包，然后重启即可</p><img src="/img/image-20200519223457904.png" alt="image-20200519223457904" style="zoom:80%;" /></li></ul><h4 id="无法下载intelliBot插件"><a href="#无法下载intelliBot插件" class="headerlink" title="无法下载intelliBot插件"></a>无法下载intelliBot插件</h4><p>报错信息：</p><p>​    打开<strong>IDEA</strong>插件的网址，出现：</p><p>​    <img src="/img/image-20200519140024112.png" alt="image-20200519140024112" style="zoom:80%;" /></p><p>解决方案：</p><ul><li><p>附上<strong>intelliBot</strong>的下载网盘：</p><p>链接：<a href="https://pan.baidu.com/s/1OuXe8uBt_nyR0ui7hBEIkA" target="_blank" rel="noopener">https://pan.baidu.com/s/1OuXe8uBt_nyR0ui7hBEIkA</a><br>提取码：x9f4</p></li><li><p>在“<strong>C:\Windows\System32\drivers\etc</strong>”路径下的“<strong>hosts</strong>”文件中加上”<strong>199.232.68.133 raw.githubusercontent.com</strong>“，无法直接改hosts文件的时候可以先复制到桌面，改完后替换文件</p><img src="/img/image-20200519140231187.png" alt="image-20200519140231187" style="zoom:80%;" /></li><li><p>打开pycharm，点击<strong>File-&gt;Settings-&gt;Plugins</strong>，输入<strong>IntelliBot</strong>，点击<strong>Install</strong>下载就可以了</p><img src="/img/image-20200519140827606.png" alt="image-20200519140827606" style="zoom:80%;" /></li></ul><h4 id="RobotFramework的RIDE启动报错"><a href="#RobotFramework的RIDE启动报错" class="headerlink" title="RobotFramework的RIDE启动报错"></a>RobotFramework的RIDE启动报错</h4><p>报错信息：</p><p>​    <img src="/img/image-20200518233216745.png" alt="image-20200518233216745" style="zoom:80%;" /></p><p>解决方案：</p><ul><li><p>在python3的安装文件下<strong>Lib\site-packages\robotide\application\application.py</strong>文件中的<strong>Onlnit</strong>方法中增加</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">self.locale = wx.Locale(wx.LANGUAGE_ENGLISH)</span><br></pre></td></tr></table></figure><img src="/img/image-20200518233745149.png" alt="image-20200518233745149" style="zoom:80%;" /></li></ul><h4 id="pycharm代码内容和控制台中文乱码"><a href="#pycharm代码内容和控制台中文乱码" class="headerlink" title="pycharm代码内容和控制台中文乱码"></a>pycharm代码内容和控制台中文乱码</h4><p>解决方案：</p><ul><li><p>打开pycharm，点击<strong>File-&gt;Settings-&gt;Editor-&gt;Font</strong>，将<strong>Fallback font</strong>改为有中文的字体</p><img src="/img/image-20200519211836394.png" alt="image-20200519211836394" style="zoom:80%;" /></li><li><p>打开<strong>Editor-&gt;Color Scheme -&gt; Console Font</strong>，将第一个<strong>Font</strong>改为带有中文的字体</p><img src="/img/image-20200519211931745.png" alt="image-20200519211931745" style="zoom:80%;" /></li></ul>]]></content>
    
    <summary type="html">
    
      Robotframework安装使用的报错及解决方案
    
    </summary>
    
    
      <category term="Python" scheme="https://yuxinla.github.io/categories/Python/"/>
    
      <category term="Robotframework" scheme="https://yuxinla.github.io/categories/Python/Robotframework/"/>
    
    
      <category term="Python" scheme="https://yuxinla.github.io/tags/Python/"/>
    
      <category term="Robotframework" scheme="https://yuxinla.github.io/tags/Robotframework/"/>
    
  </entry>
  
  <entry>
    <title>【Python+Robotframework】pycharm下robotframework环境搭建</title>
    <link href="https://yuxinla.github.io/article/202005181545.html"/>
    <id>https://yuxinla.github.io/article/202005181545.html</id>
    <published>2020-05-18T07:45:25.000Z</published>
    <updated>2021-10-17T06:24:35.917Z</updated>
    
    <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p>习惯了用pycharm写自动化用例，为了可以更好的使用，配置pycharm下robotframework环境搭建。python2已经停止维护，robotframework-ride最近已更新支持python3，本文的环境搭建是基于python3的。</p><a id="more"></a><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><ol><li><p>安装Python3，官网：<a href="https://www.python.org/" target="_blank" rel="noopener">https://www.python.org/</a> 自行下载安装</p></li><li><p>安装robotframework</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install robotframework</span><br></pre></td></tr></table></figure></li><li><p>安装robotframework-ride</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install robotframework-ride</span><br></pre></td></tr></table></figure></li><li><p>若安装其他模块，自行安装：pip install xxx(模块名)</p></li><li><p>安装pycharm，官网：<a href="https://www.jetbrains.com/pycharm/download/" target="_blank" rel="noopener">https://www.jetbrains.com/pycharm/download/</a> 自行下载安装</p></li></ol><h4 id="配置pycharm的robot-framework环境"><a href="#配置pycharm的robot-framework环境" class="headerlink" title="配置pycharm的robot framework环境"></a>配置pycharm的robot framework环境</h4><ol><li><p>打开pycharm，新建*.robot的文件</p><img src="/img/image-20200518223156454.png" alt="image-20200518223156454" style="zoom:80%;" /></li><li><p>打开新建的文件，点击文件上方出现的<strong>Install plugins</strong></p><img src="/img/image-20200518223529905.png" alt="image-20200518223529905" style="zoom:80%;" /></li><li><p>安装<strong>IntelliBot</strong>和<strong>Robot Framework Support</strong></p><img src="/img/image-20200518223930034.png" alt="image-20200518223930034" style="zoom:80%;" /></li><li><p>在设置面板的<strong>Editor-&gt;File Types</strong>界面，找到 <strong>Robot Feature</strong> ，添加*.txt后缀参数（如下图），可按自己实际需要来添加</p><img src="/img/image-20200519223054483.png" alt="image-20200519223054483" style="zoom:80%;" /></li></ol><h4 id="配置case和suite的运行Tools"><a href="#配置case和suite的运行Tools" class="headerlink" title="配置case和suite的运行Tools"></a>配置case和suite的运行Tools</h4><p>打开pycharm，点击File-&gt;Settings-&gt;Tools-&gt;External Tools界面，新增一个Tools</p><img src="/img/image-20200519144300331.png" alt="image-20200519144300331" style="zoom:80%;" /><ol><li><p>运行单个用例</p><ul><li><p>Name：Robot Run SingleTestCase</p></li><li><p>Program：C:\Python\Python38\Scripts\robot.exe（python安装目录下）</p></li><li><p>Arguments：log是放置生成结果的文件侠</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-d log --test "$SelectedText$" $FilePath$</span><br></pre></td></tr></table></figure></li><li><p>Working directory：$ProjectFileDir$</p><img src="/img/image-20200519221750794.png" alt="image-20200519221750794" style="zoom:80%;" /></li><li><p>使用方式：</p><img src="/img/image-20200603105417013.png" alt="image-20200603105417013" style="zoom:80%;" /></li></ul></li><li><p>运行当前集合的用例</p><ul><li><p>Name：Robot Run SuiteTestCase</p></li><li><p>Program：C:\Python\Python38\Scripts\robot.exe（python安装目录下）</p></li><li><p>Arguments：log是放置生成结果的文件侠</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-d log $FilePath$</span><br></pre></td></tr></table></figure></li><li><p>Working directory：$ProjectFileDir$</p><img src="/img/image-20200519222717039.png" alt="image-20200519222717039" style="zoom:80%;" /></li></ul></li><li><p>运行所有用例</p><ul><li><p>Name：Robot Run AllTestCase</p></li><li><p>Program：C:\Python\Python38\Scripts\robot.exe（python安装目录下）</p></li><li><p>Arguments：log是放置生成结果的文件侠</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-d log $FileDir$</span><br></pre></td></tr></table></figure></li><li><p>Working directory：$ProjectFileDir$</p><img src="/img/image-20200519222757054.png" alt="image-20200519222757054" style="zoom:80%;" /></li></ul></li></ol><h4 id="配置和使用过程中出现的报错"><a href="#配置和使用过程中出现的报错" class="headerlink" title="配置和使用过程中出现的报错"></a>配置和使用过程中出现的报错</h4><a href="/article/202005182318.html" title="【Python+Robotframework】Robotframework安装使用的报错及解决方案">【Python+Robotframework】Robotframework安装使用的报错及解决方案</a>]]></content>
    
    <summary type="html">
    
      pycharm下robotframework环境搭建
    
    </summary>
    
    
      <category term="Robotframework" scheme="https://yuxinla.github.io/categories/Robotframework/"/>
    
    
      <category term="Robotframework" scheme="https://yuxinla.github.io/tags/Robotframework/"/>
    
  </entry>
  
  <entry>
    <title>【Python】时间相关模块(datetime、time)</title>
    <link href="https://yuxinla.github.io/article/202005132050.html"/>
    <id>https://yuxinla.github.io/article/202005132050.html</id>
    <published>2020-05-13T12:50:15.000Z</published>
    <updated>2021-08-24T07:38:49.365Z</updated>
    
    <content type="html"><![CDATA[<h3 id="datetime、time模块"><a href="#datetime、time模块" class="headerlink" title="datetime、time模块"></a>datetime、time模块</h3><a id="more"></a><h4 id="主要的类"><a href="#主要的类" class="headerlink" title="主要的类"></a>主要的类</h4><p>处理日期（年月日）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">datetime.date()</span><br></pre></td></tr></table></figure><p>处理时间（时分秒、毫秒）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">datetime.time()</span><br></pre></td></tr></table></figure><p>处理日期+时间</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">datetime.datetime()</span><br></pre></td></tr></table></figure><p>处理时段（时间间隔）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">datetime.timedelta()</span><br></pre></td></tr></table></figure><h4 id="获取当前时间"><a href="#获取当前时间" class="headerlink" title="获取当前时间"></a>获取当前时间</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">datetime.datetime.today()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">datetime.datetime.now()</span><br></pre></td></tr></table></figure><h4 id="时间戳"><a href="#时间戳" class="headerlink" title="时间戳"></a>时间戳</h4><h4 id="时间上的加减法"><a href="#时间上的加减法" class="headerlink" title="时间上的加减法"></a>时间上的加减法</h4>]]></content>
    
    <summary type="html">
    
      Python之datetime、time
    
    </summary>
    
    
      <category term="Python" scheme="https://yuxinla.github.io/categories/Python/"/>
    
    
      <category term="Python" scheme="https://yuxinla.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>【Python】时间戳转换</title>
    <link href="https://yuxinla.github.io/article/202005122113.html"/>
    <id>https://yuxinla.github.io/article/202005122113.html</id>
    <published>2020-05-12T13:13:54.000Z</published>
    <updated>2021-08-24T07:45:40.235Z</updated>
    
    <content type="html"><![CDATA[<p>Python中时间戳的转换</p><a id="more"></a><h3 id="时间戳转换"><a href="#时间戳转换" class="headerlink" title="时间戳转换"></a>时间戳转换</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 当前时间转换为时间戳</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">now_to_timestamp</span><span class="params">(digits=<span class="number">10</span>)</span>:</span></span><br><span class="line">    time_stamp = int(round(time.time() * (<span class="number">10</span> ** (digits - <span class="number">10</span>))))</span><br><span class="line">    <span class="keyword">return</span> time_stamp</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将输入的时间转换为时间戳</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">time_to_timestamp</span><span class="params">(time_str)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        time_str = datetime.datetime.strptime(time_str, <span class="string">'%Y-%m-%d %H:%M:%S'</span>)</span><br><span class="line">        time_stamp = int(round(time.mktime(time_str.timetuple())))</span><br><span class="line">        <span class="keyword">return</span> time_stamp</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="keyword">return</span> e</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将输入的时间戳转为时间</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">timestamp_to_time</span><span class="params">(timestamp)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">if</span> len(str(timestamp)) &gt; <span class="number">10</span>:</span><br><span class="line">            timestamp = timestamp*(<span class="number">10</span>**(<span class="number">10</span>-len(str(timestamp))))</span><br><span class="line">        time_str = datetime.datetime.fromtimestamp(timestamp)</span><br><span class="line">        time_str = datetime.datetime.strftime(time_str, <span class="string">'%Y-%m-%d %H:%M:%S'</span>)</span><br><span class="line">        <span class="keyword">return</span> time_str</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="keyword">return</span> e</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      Python中时间戳的转换
    
    </summary>
    
    
      <category term="时间戳" scheme="https://yuxinla.github.io/categories/%E6%97%B6%E9%97%B4%E6%88%B3/"/>
    
    
      <category term="Python" scheme="https://yuxinla.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>【Python+Selenium】Selenium中无法点击元素情况分析</title>
    <link href="https://yuxinla.github.io/article/202005121258.html"/>
    <id>https://yuxinla.github.io/article/202005121258.html</id>
    <published>2020-05-12T04:58:39.000Z</published>
    <updated>2021-08-24T07:45:17.797Z</updated>
    
    <content type="html"><![CDATA[<p>Selenium中无法点击元素情况分析</p><a id="more"></a><h3 id="Selenium中经常会出现元素无法点击的情况，争对该情况做出分析："><a href="#Selenium中经常会出现元素无法点击的情况，争对该情况做出分析：" class="headerlink" title="Selenium中经常会出现元素无法点击的情况，争对该情况做出分析："></a>Selenium中经常会出现元素无法点击的情况，争对该情况做出分析：</h3><p>1.判断元素是否可以点击，is_</p><p>2.可点击元素响应时间较慢，或网速不好，使用适合的等待时间</p><p>3.元素被其他元素遮挡，如被下拉列表遮挡，可先点击其他无影响元素</p><p>4.</p>]]></content>
    
    <summary type="html">
    
      Selenium中无法点击元素情况分析
    
    </summary>
    
    
      <category term="Python" scheme="https://yuxinla.github.io/categories/Python/"/>
    
      <category term="Selenium" scheme="https://yuxinla.github.io/categories/Python/Selenium/"/>
    
    
      <category term="Python" scheme="https://yuxinla.github.io/tags/Python/"/>
    
      <category term="Selenium" scheme="https://yuxinla.github.io/tags/Selenium/"/>
    
  </entry>
  
  <entry>
    <title>【Python】Python语言标准库</title>
    <link href="https://yuxinla.github.io/article/202005111409.html"/>
    <id>https://yuxinla.github.io/article/202005111409.html</id>
    <published>2020-05-11T06:09:39.000Z</published>
    <updated>2021-08-24T07:38:05.647Z</updated>
    
    <content type="html"><![CDATA[<h2 id="标准库"><a href="#标准库" class="headerlink" title="标准库"></a>标准库</h2><p>在安装Python时就默认已经安装好的模块，Python具有功能强大的标准库</p><a id="more"></a><h3 id="数字和数学模块"><a href="#数字和数学模块" class="headerlink" title="数字和数学模块"></a>数字和数学模块</h3><p>numbers：数字抽象基类</p><p>math：数学函数</p><p>cmath：复数的数学函数</p><p>decimal：十进制定点和浮点算术</p><p>fractions：有理数</p><p>random：生成伪随机数</p><p>statistics：数学统计功能</p><h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><p>datetime：基本日期和时间类型</p><p>calendar：与日历相关的一般功能</p><p>collections：容器数据类型</p><p>heapq：堆队列算法</p><p>bisect：数组二分算法</p><p>array：高效的数值数组</p><p>weakref：弱引用</p><p>types：动态类型创建和内置类型的名称</p><p>copy：浅层和深层复制操作</p><p>pprint：格式化输出</p><p>reprlib：备用repr()实现</p><p>enum：支持枚举</p><h3 id="功能编程模块"><a href="#功能编程模块" class="headerlink" title="功能编程模块"></a>功能编程模块</h3><p>itertools：为高效循环创建迭代器的函数</p><p>functools：可调用对象的高阶函数和操作</p><p>operator：标准运算符作为函数</p><h3 id="数据持久化"><a href="#数据持久化" class="headerlink" title="数据持久化"></a>数据持久化</h3><p>pickle：Python对象序列化</p><p>copyreh：注册pickle支持功能</p><p>shelve：Python对象持久化</p><p>marshal：内部Python对象序列化</p><p>dbm：与Unix“数据库”的接口</p><p>sqlite3：SQLite数据库的DB-API 2.0接口</p><h3 id="数据压缩和存档"><a href="#数据压缩和存档" class="headerlink" title="数据压缩和存档"></a>数据压缩和存档</h3><p>zlib：与gzip兼容的压缩</p><p>gzip/bz2：支持gzip/bzip2文件</p><p>lzma：使用LZMA算法进行压缩</p><p>zipfile：使用ZIP存档</p><p>tarfiel：读取和写入tar归档文件</p><h3 id="文件格式"><a href="#文件格式" class="headerlink" title="文件格式"></a>文件格式</h3><p>csv：CSV文件读写</p><p>configparser：配置文件解析器</p><p>netrc：netrc文件处理</p><p>xdrlib：对XDR数据进行编码和解码</p><p>plistlib：生成并解析MAC OS X.plist文件</p><h3 id="文件和目录访问"><a href="#文件和目录访问" class="headerlink" title="文件和目录访问"></a>文件和目录访问</h3><p>pathlib：面向对象的文件系统路径</p><p>os.path：常见的路径名操作</p><p>fileinput：迭代多个输入流中的行</p><p>stat：解释stat()结果</p><p>filecmp：文件和目录比较</p><p>tempfile：生成临时文件和 目录</p><p>glob：Unix文件名模式匹配</p><p>fnmatch：Unix文件名模式匹配</p><p>linecache：随机访问文本行</p><p>shutil：高级文件操作</p><p>macpath：Mac OS 9路径操作函数</p><h3 id="通用操作系统服务"><a href="#通用操作系统服务" class="headerlink" title="通用操作系统服务"></a>通用操作系统服务</h3><p>os：其他操作系统接口</p><p>io：用于处理流的核心工具</p><p>time：时间访问和转换</p><p>argparse：用于命令行选项，参数和子命令的解析器</p><p>getopt：用于命令行选项的C风格解析器</p><p>logging：Python的日志记录工具</p><p>getpass：便携式密码输入</p><p>curses：字符单元格显示的终端处理</p><p>platform：访问底层平台的标识数据</p><p>errno：标准errno系统符号</p><p>ctypes：Python的外部函数库</p><h3 id="并发执行"><a href="#并发执行" class="headerlink" title="并发执行"></a>并发执行</h3><p>threading：基于线程的并行性</p><p>multiprocessing：基于进程的并行性</p><p>concurrent.futures：启动并行任务</p><p>subprocess：子流程管理</p><p>sched：事件调度程序</p><p>queue：同步的队列类</p><p>_thread：低级线程API</p><h3 id="加密服务"><a href="#加密服务" class="headerlink" title="加密服务"></a>加密服务</h3><p>hashlib：安全哈希和消息摘要算法接口</p><p>hmac：用于消息身份验证的密钥哈希算法</p><p>secrets：生成用于管理机密的安全随机数</p><h3 id="网络和进程间通信"><a href="#网络和进程间通信" class="headerlink" title="网络和进程间通信"></a>网络和进程间通信</h3><p>asyncio：异步I/O</p><p>socket：低级网络接口</p><p>ssl：套接字对象的TLS/SSL包装器</p><p>select：等待I/O完成</p><p>selectors：高级I/O复用</p><p>asyncore：异步套接字处理程序</p><p>asynchat：异步套接字命令/响应处理程序</p><p>signal：设置异步事件的处理程序</p><h3 id="互联网数据处理"><a href="#互联网数据处理" class="headerlink" title="互联网数据处理"></a>互联网数据处理</h3><p>email：电子邮件和MIME处理包</p><p>json：JSON编码器和解码器</p><p>mailcap：Mailcap文件处理</p><p>mailbox：以各种格式处理邮箱</p><p>mimetypes：将文件名映射到MIME类型</p><p>base64：Base16/Base32/Base64/Base85数据编码</p><p>binhex：对binhex4文件进行编码和解码</p><p>binascii：在二进制和ASCII之间转换</p><p>quopri：对MIME引用的可打印数据进行编码和解码、</p><p>uu：对uuencode文件进行编码和解码</p><h3 id="互联网协议和支持"><a href="#互联网协议和支持" class="headerlink" title="互联网协议和支持"></a>互联网协议和支持</h3><p>webbrowser：Web浏览器控制器</p><p>cgi：通用网关接口支持</p><p>cgitb：CGI脚本的回溯管理器</p><p>wsgiref：WSGI使用程序和参考实现</p><p>urllib：URL处理模块</p><p>http：HTTP模块</p><p>ftplib/poplib/imaplib/nntplib/smtplib：FTP/POP3/IMAP4NNTP/SMTP协议客户端</p><p>smtpd：SMTP服务器</p><p>telnetlib：Telnet客户端</p><p>socketserver：网络服务器的框架</p><p>xmlrpc：XMLRPC服务器和客户端模块</p><p>ipaddress：IPv4/IPv6操作库</p><h3 id="多媒体服务"><a href="#多媒体服务" class="headerlink" title="多媒体服务"></a>多媒体服务</h3><p>audioop：处理原始音频数据</p><p>aifc：读写AIFF和AIFC文件</p><p>sunau：读取和写入Sun AU文件</p><p>wave：读写IFF分块数据</p><p>colorsys：颜色系统之间的转换</p><p>imghdr：确定图像的类型</p><p>sndhdr：确定声音文件的类型</p><p>ossaudiodev：访问兼容OSS的音频设备</p><h3 id="结构化标记处理工具"><a href="#结构化标记处理工具" class="headerlink" title="结构化标记处理工具"></a>结构化标记处理工具</h3><p>html：超文本标记语言支持</p><p>xml：XML处理模块</p><h3 id="程序框架"><a href="#程序框架" class="headerlink" title="程序框架"></a>程序框架</h3><p>turtle：海龟作图库</p><p>cmd：支持面向行的命令解释器</p><p>shlex：简单的此法分析</p><h3 id="图形用户界面"><a href="#图形用户界面" class="headerlink" title="图形用户界面"></a>图形用户界面</h3><p>tkinter：Tcl/Tk的Python接口</p>]]></content>
    
    <summary type="html">
    
      Python标准库总结
    
    </summary>
    
    
      <category term="Python" scheme="https://yuxinla.github.io/categories/Python/"/>
    
    
      <category term="Python" scheme="https://yuxinla.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>【Python】pip install很慢的解决方案</title>
    <link href="https://yuxinla.github.io/article/202004292248.html"/>
    <id>https://yuxinla.github.io/article/202004292248.html</id>
    <published>2020-04-29T14:48:44.000Z</published>
    <updated>2021-08-24T07:38:37.819Z</updated>
    
    <content type="html"><![CDATA[<p>pip install 安装时出现：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Retrying (Retry(total=4, connect=None, <span class="built_in">read</span>=None, redirect=None, status=None)) </span><br><span class="line">after connection broken by <span class="string">'ConnectTimeoutError(&lt;pip._vendor.urllib3.connection.</span></span><br><span class="line"><span class="string">VerifiedHTTPSConnection object at 0x03B605F8&gt;, '</span>Connection to pypi.python.org </span><br><span class="line">timed out. (connect timeout=15)<span class="string">')'</span>: /simple/xlrd/</span><br></pre></td></tr></table></figure><a id="more"></a><p>解决方案：</p><p>切换镜像</p><ul><li><p>豆瓣(douban) <a href="http://pypi.douban.com/simple/" target="_blank" rel="noopener">http://pypi.douban.com/simple/</a> </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install xxx -i http://pypi.douban.com/simple/ --trusted-host pypi.douban.com</span><br></pre></td></tr></table></figure></li><li><p>阿里云 <a href="http://mirrors.aliyun.com/pypi/simple/" target="_blank" rel="noopener">http://mirrors.aliyun.com/pypi/simple/</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install xxx -i http:&#x2F;&#x2F;mirros.aliyun.com&#x2F;pypi&#x2F;simple&#x2F; --trusted-host mirros.aliyun.com</span><br></pre></td></tr></table></figure></li><li><p>中国科技大学 <a href="https://pypi.mirrors.ustc.edu.cn/simple/" target="_blank" rel="noopener">https://pypi.mirrors.ustc.edu.cn/simple/ </a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install xxx -i https://pypi.mirros.ustc.edu.cn/simple/ --trusted-host pypi.mirros.ustc.edu</span><br></pre></td></tr></table></figure></li><li><p>清华大学 <a href="https://pypi.tuna.tsinghua.edu.cn/simple/" target="_blank" rel="noopener">https://pypi.tuna.tsinghua.edu.cn/simple/</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install xxx -i https://pypi.tuna.tsinghua.edu.cn/simple/ --trusted-host pypi.tuna.tsinghua.edu.cn</span><br></pre></td></tr></table></figure></li><li><p>中国科学技术大学 <a href="http://pypi.mirrors.ustc.edu.cn/simple/" target="_blank" rel="noopener">http://pypi.mirrors.ustc.edu.cn/simple/</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install xxx -i http://pypi.mirros.ustc.edu.cn/simple --trusted-host pypi.mirros.ustc.edu.cn/simple</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      pip install很慢的解决方案
    
    </summary>
    
    
      <category term="Python" scheme="https://yuxinla.github.io/categories/Python/"/>
    
    
      <category term="Python" scheme="https://yuxinla.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>【Python】二进制、八进制、十进制、十六进制之间的转换</title>
    <link href="https://yuxinla.github.io/article/202004272135.html"/>
    <id>https://yuxinla.github.io/article/202004272135.html</id>
    <published>2020-04-27T13:35:57.000Z</published>
    <updated>2021-08-24T07:45:30.063Z</updated>
    
    <content type="html"><![CDATA[<p>Python之二进制、八进制、十进制、十六进制之间的转换进制</p><a id="more"></a><h3 id="二进制进制转其他"><a href="#二进制进制转其他" class="headerlink" title="二进制进制转其他"></a>二进制进制转其他</h3><h4 id="二进制转八进制：oct-int-n-2"><a href="#二进制转八进制：oct-int-n-2" class="headerlink" title="二进制转八进制：oct(int(n,2))"></a>二进制转八进制：oct(int(n,2))</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">n=input()</span><br><span class="line">print(oct(int(n,<span class="number">2</span>)))</span><br></pre></td></tr></table></figure><h4 id="二进制转十进制：int-n-2"><a href="#二进制转十进制：int-n-2" class="headerlink" title="二进制转十进制：int(n,2)"></a>二进制转十进制：int(n,2)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">n=input()</span><br><span class="line">print(bin(n))</span><br></pre></td></tr></table></figure><h4 id="二进制转十六进制：hex-int-n-2"><a href="#二进制转十六进制：hex-int-n-2" class="headerlink" title="二进制转十六进制：hex(int(n,2))"></a>二进制转十六进制：hex(int(n,2))</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">n=input()</span><br><span class="line">print(hex(int(n,<span class="number">2</span>)))</span><br></pre></td></tr></table></figure><h3 id="八进制转其他进制"><a href="#八进制转其他进制" class="headerlink" title="八进制转其他进制"></a>八进制转其他进制</h3><h4 id="八进制转二进制：bin-int-n-8"><a href="#八进制转二进制：bin-int-n-8" class="headerlink" title="八进制转二进制：bin(int(n,8))"></a>八进制转二进制：bin(int(n,8))</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">n=input()</span><br><span class="line">print(bin(int(n,<span class="number">8</span>)))</span><br></pre></td></tr></table></figure><h4 id="八进制转十进制：int-n-8"><a href="#八进制转十进制：int-n-8" class="headerlink" title="八进制转十进制：int(n,8)"></a>八进制转十进制：int(n,8)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">n=input()</span><br><span class="line">print(int(n,<span class="number">8</span>))</span><br></pre></td></tr></table></figure><h4 id="八进制转十六进制：hex-int-n-16"><a href="#八进制转十六进制：hex-int-n-16" class="headerlink" title="八进制转十六进制：hex(int(n,16))"></a>八进制转十六进制：hex(int(n,16))</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">n=input()</span><br><span class="line">print(hex(int(n,<span class="number">8</span>)))</span><br></pre></td></tr></table></figure><h3 id="十进制转其他进制"><a href="#十进制转其他进制" class="headerlink" title="十进制转其他进制"></a>十进制转其他进制</h3><h4 id="十进制转二进制：bin-n"><a href="#十进制转二进制：bin-n" class="headerlink" title="十进制转二进制：bin(n)"></a>十进制转二进制：bin(n)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">n=int(input())</span><br><span class="line">print(bin(n))</span><br></pre></td></tr></table></figure><h4 id="十进制转八进制：oct-n"><a href="#十进制转八进制：oct-n" class="headerlink" title="十进制转八进制：oct(n)"></a>十进制转八进制：oct(n)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">n=int(input())</span><br><span class="line">print(oct(n))</span><br></pre></td></tr></table></figure><h4 id="十进制转十六进制：hex-n"><a href="#十进制转十六进制：hex-n" class="headerlink" title="十进制转十六进制：hex(n)"></a>十进制转十六进制：hex(n)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">n=int(input())</span><br><span class="line">print(hex(n))</span><br></pre></td></tr></table></figure><h3 id="十六进制转其他进制"><a href="#十六进制转其他进制" class="headerlink" title="十六进制转其他进制"></a>十六进制转其他进制</h3><h4 id="十六进制转二进制：bin-int-n-16"><a href="#十六进制转二进制：bin-int-n-16" class="headerlink" title="十六进制转二进制：bin(int(n,16))"></a>十六进制转二进制：bin(int(n,16))</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">n=input()</span><br><span class="line">print(bin(int(n,<span class="number">16</span>)))</span><br></pre></td></tr></table></figure><h4 id="十六进制转八进制：oct-int-n-16"><a href="#十六进制转八进制：oct-int-n-16" class="headerlink" title="十六进制转八进制：oct(int(n,16))"></a>十六进制转八进制：oct(int(n,16))</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">n=input()</span><br><span class="line">print(oct(int(n,<span class="number">16</span>)))</span><br></pre></td></tr></table></figure><h4 id="十六进制转十进制：int-n-16"><a href="#十六进制转十进制：int-n-16" class="headerlink" title="十六进制转十进制：int(n,16)"></a>十六进制转十进制：int(n,16)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">n=input()</span><br><span class="line">print(int(n,<span class="number">16</span>))</span><br></pre></td></tr></table></figure><h3 id="十进制转其他进制（int、float类型）"><a href="#十进制转其他进制（int、float类型）" class="headerlink" title="十进制转其他进制（int、float类型）"></a>十进制转其他进制（int、float类型）</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> TypeVar</span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"></span><br><span class="line">paramNum = TypeVar(<span class="string">'paramNum'</span>, float, int)  <span class="comment"># Must be float or int</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># int、float类型：十进制转二、八、十六、三十二...进制</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decimal_system_to</span><span class="params">(x: paramNum, base: int, digit: int = <span class="number">0</span>)</span> -&gt; str:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    :param x: 值，int或float类型</span></span><br><span class="line"><span class="string">    :param base: 进制，如：2，8，16，32，int类型，传10返回传入参数保留小数位四舍五入后的值</span></span><br><span class="line"><span class="string">    :param digit: 显示小数的位数，默认不显示，int类型，正整数</span></span><br><span class="line"><span class="string">    :return: 返回str类型的结果</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="keyword">if</span> base &gt;= <span class="number">2</span> <span class="keyword">and</span> digit &gt;= <span class="number">0</span> <span class="keyword">and</span> isinstance(base, int) <span class="keyword">and</span> isinstance(digit, int):</span><br><span class="line">        hex_list = [str(x) <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">10</span>)]</span><br><span class="line">        <span class="keyword">if</span> base &gt; <span class="number">10</span>:</span><br><span class="line">            hex_list.extend([chr(x) <span class="keyword">for</span> x <span class="keyword">in</span> range(ord(<span class="string">'A'</span>), ord(<span class="string">'A'</span>) + (base - <span class="number">10</span>))])</span><br><span class="line">        <span class="keyword">if</span> isinstance(x, int) <span class="keyword">or</span> isinstance(x, float):</span><br><span class="line">            <span class="keyword">if</span> x &lt; <span class="number">0</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="string">'-'</span> + decimal_system_to(abs(x), digit)</span><br><span class="line">            result = []</span><br><span class="line">            <span class="comment"># 计算整数部分</span></span><br><span class="line">            integer = int(x)</span><br><span class="line">            <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">                integer, remainder = divmod(int(integer), base)</span><br><span class="line">                result.insert(<span class="number">0</span>, str(hex_list[remainder]))</span><br><span class="line">                <span class="keyword">if</span> integer == <span class="number">0</span>:</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">            <span class="comment"># 计算小数部分</span></span><br><span class="line">            <span class="keyword">if</span> digit:</span><br><span class="line">                result.append(<span class="string">'.'</span>)</span><br><span class="line">                flag = <span class="number">0</span></span><br><span class="line">                decimal = math.modf(x)[<span class="number">0</span>]</span><br><span class="line">                <span class="keyword">while</span> flag &lt; digit:</span><br><span class="line">                    decimal = decimal * base</span><br><span class="line">                    result.append(str(hex_list[int(decimal)]))</span><br><span class="line">                    <span class="keyword">if</span> math.modf(decimal)[<span class="number">0</span>] == <span class="number">0</span>:</span><br><span class="line">                        result.append(<span class="string">'0'</span> * (digit - flag - <span class="number">1</span>))</span><br><span class="line">                        <span class="keyword">break</span></span><br><span class="line">                    <span class="keyword">if</span> decimal &gt; <span class="number">0</span>:</span><br><span class="line">                        decimal = math.modf(decimal)[<span class="number">0</span>]</span><br><span class="line">                    flag += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="string">''</span>.join(result)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">'%s cannot be interpreted as an integer'</span> % (str(x))</span><br><span class="line">    <span class="keyword">elif</span> isinstance(base, float):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'base must be integer'</span></span><br><span class="line">    <span class="keyword">elif</span> base == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> (<span class="string">'%.'</span> + <span class="string">'%df'</span> % digit) % x</span><br><span class="line">    <span class="keyword">elif</span> base &lt; <span class="number">2</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'base must be &gt;= 2, or 0'</span></span><br><span class="line">    <span class="keyword">elif</span> isinstance(digit, float):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'base must be integer'</span></span><br><span class="line">    <span class="keyword">elif</span> digit &lt; <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'digit must be &gt;= 0'</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      Python之二进制、八进制、十进制、十六进制之间的转换进制
    
    </summary>
    
    
      <category term="Python" scheme="https://yuxinla.github.io/categories/Python/"/>
    
    
      <category term="Python" scheme="https://yuxinla.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>【测试设计】登录功能测试设计</title>
    <link href="https://yuxinla.github.io/article/202004182305.html"/>
    <id>https://yuxinla.github.io/article/202004182305.html</id>
    <published>2020-04-18T15:05:03.000Z</published>
    <updated>2021-10-17T06:22:49.432Z</updated>
    
    <content type="html"><![CDATA[<p>登录界面：用户名、密码、登录、勾选框（记住密码）、注册</p><a id="more"></a><h3 id="功能测试"><a href="#功能测试" class="headerlink" title="功能测试"></a>功能测试</h3><ol><li>输入已注册的用户名和正确的密码登录，验证登录成功（正确登录）</li><li>输入已注册的用户名和错误的密码登录，验证登录失败，且提示信息正确（错误校验）</li><li>输入未注册的用户名和任意密码登录，验证登录失败，且提示信息正确</li><li>输入未激活的用户名密码登录，验证登录失败，且提示信息正确</li><li>输入已注销的用户名密码登录，验证登录失败，且提示信息正确</li><li>用户名和密码都为空，验证登录失败，且提示信息正确（非空校验）</li><li>用户名和密码两者之一为空，验证登录失败，且提示信息正确（非空校验）</li><li>用户名和密码中含有空格的处理</li><li>用户名和密码是否对大小写敏感</li><li>用户名和密码的长度限制</li><li>输入密码时，键盘的大小写是否开启是否有提示</li><li>密码输入框是否有加密显示</li><li>如果启用验证码，验证码是否容易识别</li><li>如果启用验证码，输入正确的用户名、密码、验证码，验证登录成功</li><li>如果启用验证码，输入正确的用户名、密码和错误的验证码，验证登录失败，且提示信息正确</li><li>如果启用验证码，输入正确的用户名、密码，验证码为空，验证登录失败，且提示信息正确</li><li>如果启用验证码，验证码图片是否可以正常更换验证码，更换后是否可用</li><li>如果启用验证码，刷新页面是否会刷新验证码</li><li>如果启用验证码，验证码具有时效性，分别验证时效性内、外的有效性</li><li>快捷键tab和enter是否可以使用</li><li>用户第一次登录时，是否提示修改密码</li><li>不同权限的用户登录，展示的权限内容是否正确</li><li>用户成功登录，会话超时，继续操作是否会重定向用户登录界面</li></ol><h3 id="安全测试"><a href="#安全测试" class="headerlink" title="安全测试"></a>安全测试</h3>]]></content>
    
    <summary type="html">
    
      对登录功能测试点进行总结，便于查阅
    
    </summary>
    
    
      <category term="测试设计" scheme="https://yuxinla.github.io/categories/%E6%B5%8B%E8%AF%95%E8%AE%BE%E8%AE%A1/"/>
    
    
      <category term="测试设计" scheme="https://yuxinla.github.io/tags/%E6%B5%8B%E8%AF%95%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>【数据库】MySQL的下载与安装教程</title>
    <link href="https://yuxinla.github.io/article/202004172233.html"/>
    <id>https://yuxinla.github.io/article/202004172233.html</id>
    <published>2020-04-17T14:33:13.000Z</published>
    <updated>2021-10-17T06:23:05.652Z</updated>
    
    <content type="html"><![CDATA[<p>MySQL数据库在各环境下的安装</p><a id="more"></a><h2 id="Window环境"><a href="#Window环境" class="headerlink" title="Window环境"></a>Window环境</h2><h3 id="1-下载MySQL"><a href="#1-下载MySQL" class="headerlink" title="1.下载MySQL"></a>1.下载MySQL</h3><ul><li><p><a href="https://dev.mysql.com/downloads/mysql/" target="_blank" rel="noopener">下载地址</a></p></li><li><p>根据需要下载安装包</p><img src="/img/image-20200417225211487.png" style="zoom: 70%;" /><img src="/img/image-20200417230508872.png" style="zoom: 70%;" /></li></ul><h3 id="2-安装"><a href="#2-安装" class="headerlink" title="2.安装"></a>2.安装</h3><ul><li>将下载的安装解压至指定的路径，如</li></ul>]]></content>
    
    <summary type="html">
    
      MySQL数据库在各环境下的安装
    
    </summary>
    
    
      <category term="MySQL" scheme="https://yuxinla.github.io/categories/MySQL/"/>
    
    
      <category term="MySQL" scheme="https://yuxinla.github.io/tags/MySQL/"/>
    
  </entry>
  
</feed>
